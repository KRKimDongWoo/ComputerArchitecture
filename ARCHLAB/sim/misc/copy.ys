# Initial code
	irmovq Stack,%rsp
	irmovq $3,%rdx
	irmovq dest,%rsi
	irmovq src,%rdi
	call copy_block
	halt

.align 8
# Source array
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00

# Destination array
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

# long copy_block(long *src, long *dest, long len)
# src in %rdi, dest in %rsi, len in %rdx
copy_block:
	pushq %rbx
	xorq %rax,%rax
loop:
	andq %rdx,%rdx
	je done
	mrmovq 0(%rdi),%rbx
	rmmovq %rbx,0(%rsi)
	xorq %rbx,%rax
	irmovq $1,%rcx
	subq %rcx,%rdx
	irmovq $8,%rcx
	addq %rcx,%rdi
	addq %rcx,%rsi
	jmp loop
done:
	popq %rbx
	ret			# Return

.pos 0x100
Stack:






